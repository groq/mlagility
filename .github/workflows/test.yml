# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Lint and Unit Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          if [ -f setup.py ]; then pip install -e .; fi
          pip install transformers
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
          bash Miniconda3-latest-Linux-x86_64.sh -b -u
      - name: Lint with PyLint
        run: |
          pylint src --rcfile .pylintrc
      - name: Test with unittest
        run: |
          python test/cli.py
          python test/analysis.py    
      - name: Install and Start Slurm
        run: |
          sudo apt update -y
          sudo apt install slurm-wlm -y
          cp test/helpers/slurm.conf test/helpers/slurm_modified.conf
          sed -i "s/YOUR_HOSTNAME_HERE/$HOSTNAME/" test/helpers/slurm_modified.conf
          sudo mv test/helpers/slurm_modified.conf /etc/slurm/slurm.conf
          sudo service slurmd start
          sudo service slurmctld start
          sudo service munge start
      - name: Test benchit on Slurm
        run: |
          # Create conda environment for Slurm using srun (sbatch + wait)
          source ~/miniconda3/bin/activate
          export SKIP_REQUIREMENTS_INSTALL="True"
          srun src/mlagility/cli/setup_venv.sh 

          # Run tests on Slurm
          export MLAGILITY_SLURM_USE_DEFAULT_MEMORY="True"
          benchit benchmark models/selftest/linear.py --build-only --use-slurm --cache-dir local_cache
          bash test/helpers/check_slurm_output.sh slurm-2.out
          
